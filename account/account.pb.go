// Code generated by protoc-gen-go.
// source: account.proto
// DO NOT EDIT!

/*
Package account is a generated protocol buffer package.

It is generated from these files:
	account.proto

It has these top-level messages:
	Account
	ListAccountsRequest
	ListAccountsResponse
	GetByIdRequest
	GetByEmailRequest
	AuthenticateByEmailRequest
	CreateAccountRequest
	UpdateAccountRequest
	DeleteAccountRequest
*/
package account

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Account struct {
	Id     string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name   string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Email  string            `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Images map[string]string `protobuf:"bytes,4,rep,name=images" json:"images,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Account) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Account) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Account) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Account) GetImages() map[string]string {
	if m != nil {
		return m.Images
	}
	return nil
}

type ListAccountsRequest struct {
	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListAccountsRequest) Reset()                    { *m = ListAccountsRequest{} }
func (m *ListAccountsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListAccountsRequest) ProtoMessage()               {}
func (*ListAccountsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListAccountsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListAccountsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListAccountsResponse struct {
	Accounts      []*Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
	NextPageToken string     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListAccountsResponse) Reset()                    { *m = ListAccountsResponse{} }
func (m *ListAccountsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListAccountsResponse) ProtoMessage()               {}
func (*ListAccountsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListAccountsResponse) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *ListAccountsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetByIdRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetByIdRequest) Reset()                    { *m = GetByIdRequest{} }
func (m *GetByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*GetByIdRequest) ProtoMessage()               {}
func (*GetByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetByIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetByEmailRequest struct {
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
}

func (m *GetByEmailRequest) Reset()                    { *m = GetByEmailRequest{} }
func (m *GetByEmailRequest) String() string            { return proto.CompactTextString(m) }
func (*GetByEmailRequest) ProtoMessage()               {}
func (*GetByEmailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetByEmailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type AuthenticateByEmailRequest struct {
	Email    string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *AuthenticateByEmailRequest) Reset()                    { *m = AuthenticateByEmailRequest{} }
func (m *AuthenticateByEmailRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthenticateByEmailRequest) ProtoMessage()               {}
func (*AuthenticateByEmailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AuthenticateByEmailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AuthenticateByEmailRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type CreateAccountRequest struct {
	Account  *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Password string   `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *CreateAccountRequest) Reset()                    { *m = CreateAccountRequest{} }
func (m *CreateAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountRequest) ProtoMessage()               {}
func (*CreateAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreateAccountRequest) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *CreateAccountRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UpdateAccountRequest struct {
	Id      string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Account *Account `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
}

func (m *UpdateAccountRequest) Reset()                    { *m = UpdateAccountRequest{} }
func (m *UpdateAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateAccountRequest) ProtoMessage()               {}
func (*UpdateAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateAccountRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateAccountRequest) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type DeleteAccountRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteAccountRequest) Reset()                    { *m = DeleteAccountRequest{} }
func (m *DeleteAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAccountRequest) ProtoMessage()               {}
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DeleteAccountRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Account)(nil), "account.Account")
	proto.RegisterType((*ListAccountsRequest)(nil), "account.ListAccountsRequest")
	proto.RegisterType((*ListAccountsResponse)(nil), "account.ListAccountsResponse")
	proto.RegisterType((*GetByIdRequest)(nil), "account.GetByIdRequest")
	proto.RegisterType((*GetByEmailRequest)(nil), "account.GetByEmailRequest")
	proto.RegisterType((*AuthenticateByEmailRequest)(nil), "account.AuthenticateByEmailRequest")
	proto.RegisterType((*CreateAccountRequest)(nil), "account.CreateAccountRequest")
	proto.RegisterType((*UpdateAccountRequest)(nil), "account.UpdateAccountRequest")
	proto.RegisterType((*DeleteAccountRequest)(nil), "account.DeleteAccountRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AccountService service

type AccountServiceClient interface {
	List(ctx context.Context, in *ListAccountsRequest, opts ...grpc.CallOption) (*ListAccountsResponse, error)
	GetById(ctx context.Context, in *GetByIdRequest, opts ...grpc.CallOption) (*Account, error)
	GetByEmail(ctx context.Context, in *GetByEmailRequest, opts ...grpc.CallOption) (*Account, error)
	AuthenticateByEmail(ctx context.Context, in *AuthenticateByEmailRequest, opts ...grpc.CallOption) (*Account, error)
	Create(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*Account, error)
	Update(ctx context.Context, in *UpdateAccountRequest, opts ...grpc.CallOption) (*Account, error)
	Delete(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type accountServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountServiceClient(cc *grpc.ClientConn) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) List(ctx context.Context, in *ListAccountsRequest, opts ...grpc.CallOption) (*ListAccountsResponse, error) {
	out := new(ListAccountsResponse)
	err := grpc.Invoke(ctx, "/account.AccountService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetById(ctx context.Context, in *GetByIdRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/account.AccountService/GetById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetByEmail(ctx context.Context, in *GetByEmailRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/account.AccountService/GetByEmail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) AuthenticateByEmail(ctx context.Context, in *AuthenticateByEmailRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/account.AccountService/AuthenticateByEmail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Create(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/account.AccountService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Update(ctx context.Context, in *UpdateAccountRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/account.AccountService/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Delete(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AccountService service

type AccountServiceServer interface {
	List(context.Context, *ListAccountsRequest) (*ListAccountsResponse, error)
	GetById(context.Context, *GetByIdRequest) (*Account, error)
	GetByEmail(context.Context, *GetByEmailRequest) (*Account, error)
	AuthenticateByEmail(context.Context, *AuthenticateByEmailRequest) (*Account, error)
	Create(context.Context, *CreateAccountRequest) (*Account, error)
	Update(context.Context, *UpdateAccountRequest) (*Account, error)
	Delete(context.Context, *DeleteAccountRequest) (*google_protobuf.Empty, error)
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).List(ctx, req.(*ListAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/GetById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetById(ctx, req.(*GetByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetByEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/GetByEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetByEmail(ctx, req.(*GetByEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_AuthenticateByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticateByEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).AuthenticateByEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/AuthenticateByEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).AuthenticateByEmail(ctx, req.(*AuthenticateByEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Create(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Update(ctx, req.(*UpdateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Delete(ctx, req.(*DeleteAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "account.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _AccountService_List_Handler,
		},
		{
			MethodName: "GetById",
			Handler:    _AccountService_GetById_Handler,
		},
		{
			MethodName: "GetByEmail",
			Handler:    _AccountService_GetByEmail_Handler,
		},
		{
			MethodName: "AuthenticateByEmail",
			Handler:    _AccountService_AuthenticateByEmail_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _AccountService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _AccountService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _AccountService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "account.proto",
}

func init() { proto.RegisterFile("account.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 515 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x54, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0x8d, 0x93, 0x34, 0x49, 0xa7, 0x6a, 0x28, 0x53, 0x0b, 0x2c, 0x97, 0x4a, 0xd1, 0x22, 0x55,
	0x05, 0x21, 0x57, 0x2a, 0x08, 0x71, 0x7b, 0x09, 0x10, 0xa1, 0x4a, 0xa8, 0x02, 0x17, 0x5e, 0xa9,
	0xdc, 0x78, 0x08, 0x56, 0x1d, 0xdb, 0x78, 0xd7, 0x85, 0xf4, 0xbb, 0xf8, 0x1a, 0xbe, 0x06, 0x79,
	0xbd, 0x76, 0x9c, 0x64, 0x43, 0xfb, 0xb6, 0x7b, 0xf6, 0xcc, 0x99, 0xcb, 0x19, 0x2d, 0x6c, 0x7b,
	0xe3, 0x71, 0x9c, 0x45, 0xc2, 0x49, 0xd2, 0x58, 0xc4, 0xd8, 0x55, 0x57, 0x7b, 0x6f, 0x12, 0xc7,
	0x93, 0x90, 0x8e, 0x24, 0x7c, 0x91, 0x7d, 0x3f, 0xa2, 0x69, 0x22, 0x66, 0x05, 0x8b, 0xfd, 0x31,
	0xa0, 0x3b, 0x2c, 0x88, 0xd8, 0x87, 0x66, 0xe0, 0x5b, 0xc6, 0xc0, 0x38, 0xdc, 0x74, 0x9b, 0x81,
	0x8f, 0x08, 0xed, 0xc8, 0x9b, 0x92, 0xd5, 0x94, 0x88, 0x3c, 0xa3, 0x09, 0x1b, 0x34, 0xf5, 0x82,
	0xd0, 0x6a, 0x49, 0xb0, 0xb8, 0xe0, 0x33, 0xe8, 0x04, 0x53, 0x6f, 0x42, 0xdc, 0x6a, 0x0f, 0x5a,
	0x87, 0x5b, 0xc7, 0x0f, 0x9c, 0xb2, 0x16, 0xa5, 0xed, 0x9c, 0xc8, 0xe7, 0x51, 0x24, 0xd2, 0x99,
	0xab, 0xb8, 0xf6, 0x4b, 0xd8, 0xaa, 0xc1, 0xb8, 0x03, 0xad, 0x4b, 0x9a, 0xa9, 0xfc, 0xf9, 0x31,
	0x4f, 0x76, 0xe5, 0x85, 0x59, 0x59, 0x41, 0x71, 0x79, 0xd5, 0x7c, 0x61, 0xb0, 0xcf, 0xb0, 0xfb,
	0x31, 0xe0, 0x42, 0xa9, 0x73, 0x97, 0x7e, 0x66, 0xc4, 0x05, 0xee, 0xc1, 0x66, 0xe2, 0x4d, 0xe8,
	0x9c, 0x07, 0xd7, 0x24, 0x85, 0x36, 0xdc, 0x5e, 0x0e, 0x9c, 0x05, 0xd7, 0x84, 0xfb, 0x00, 0xf2,
	0x51, 0xc4, 0x97, 0x14, 0x29, 0x49, 0x49, 0xff, 0x92, 0x03, 0x2c, 0x04, 0x73, 0x51, 0x92, 0x27,
	0x71, 0xc4, 0x09, 0x9f, 0x40, 0x4f, 0x35, 0xc3, 0x2d, 0x43, 0x76, 0xb7, 0xb3, 0xdc, 0x9d, 0x5b,
	0x31, 0xf0, 0x00, 0xee, 0x44, 0xf4, 0x5b, 0x9c, 0xaf, 0x64, 0xda, 0xce, 0xe1, 0x4f, 0x55, 0xb6,
	0x01, 0xf4, 0x3f, 0x90, 0x78, 0x3b, 0x3b, 0xf1, 0xcb, 0xda, 0x97, 0xa6, 0xcf, 0x1e, 0xc1, 0x5d,
	0xc9, 0x18, 0xe5, 0x13, 0x2e, 0x49, 0xd5, 0xf8, 0x8d, 0xda, 0xf8, 0xd9, 0x29, 0xd8, 0xc3, 0x4c,
	0xfc, 0xa0, 0x48, 0x04, 0x63, 0x4f, 0xd0, 0x6d, 0x62, 0xd0, 0x86, 0x5e, 0xe2, 0x71, 0xfe, 0x2b,
	0x4e, 0x7d, 0x55, 0x61, 0x75, 0x67, 0xdf, 0xc0, 0x7c, 0x97, 0x92, 0x27, 0xa8, 0xec, 0x4f, 0x29,
	0x3d, 0x86, 0x72, 0xa9, 0xa4, 0x96, 0x6e, 0x12, 0x25, 0xe1, 0xbf, 0xfa, 0x2e, 0x98, 0x5f, 0x13,
	0x7f, 0x55, 0x7f, 0x79, 0x01, 0x6b, 0xf9, 0x9a, 0x37, 0xe4, 0x63, 0x07, 0x60, 0xbe, 0xa7, 0x90,
	0x6e, 0xd2, 0x3c, 0xfe, 0xdb, 0x82, 0xbe, 0xa2, 0x9c, 0x51, 0x7a, 0x15, 0x8c, 0x09, 0x47, 0xd0,
	0xce, 0x9d, 0xc7, 0xf9, 0xd6, 0x6a, 0x76, 0xcb, 0xde, 0x5f, 0xf3, 0x5a, 0xac, 0x09, 0x6b, 0xe0,
	0x73, 0xe8, 0x2a, 0x4b, 0xf1, 0x7e, 0xc5, 0x5d, 0x34, 0xd9, 0x5e, 0x69, 0x80, 0x35, 0xf0, 0x0d,
	0xc0, 0xdc, 0x68, 0xb4, 0x17, 0x43, 0xeb, 0x4e, 0x6a, 0xa3, 0x4f, 0x61, 0x57, 0xe3, 0x3d, 0x3e,
	0x9c, 0x53, 0xd7, 0x6e, 0x86, 0x56, 0xef, 0x35, 0x74, 0x0a, 0xef, 0x71, 0xde, 0xb0, 0x6e, 0x19,
	0xd6, 0x05, 0x17, 0xc6, 0xd6, 0x82, 0x75, 0x4e, 0x6b, 0x83, 0x87, 0xd0, 0x29, 0x1c, 0xac, 0x05,
	0xeb, 0x2c, 0xb5, 0xef, 0x39, 0xc5, 0x8f, 0xe6, 0x94, 0x3f, 0x9a, 0x33, 0xca, 0x7f, 0x34, 0xd6,
	0xb8, 0xe8, 0x48, 0xe4, 0xe9, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6d, 0x2b, 0x0c, 0x49, 0x0b,
	0x05, 0x00, 0x00,
}
